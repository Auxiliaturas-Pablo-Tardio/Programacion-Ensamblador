     1                                  ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     2                                  ;assemble and link with 
     3                                  ;assemble: -->> nasm -f win64 -o funcionesYPrint.o funcionesYPrint.asm -l funcionesYPrint.lst
     4                                  ;link:	   -->> gcc -o funcionesYPrint funcionesYPrint.o
     5                                  ;run:      -->> funcionesYPrint
     6                                  ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     7                                  ;-----------------------------------------
     8                                  
     9                                  ;file: funcionesYPrint.asm (nombre programa)
    10                                  
    11                                  extern printf, scanf		
    12                                  
    13                                  segment .data
    14                                  ;aqui se declaran variables inicializadas
    15 00000000 6400000000000000        a dq 100
    16 00000008 C800000000000000        b dq 200
    17 00000010 486F6C610A00            s db "Hola",10,0
    18 00000016 486F6C6120256C6C64-     sc db "Hola %lld",10,0
    18 0000001F 0A00               
    19 00000021 486F6C6120256C6C64-     sd db "Hola %lld y %lld",10,0
    19 0000002A 207920256C6C640A00 
    20 00000033 256C6C6400              fmtI db "%lld",0		
    21                                  segment .bss
    22                                  ;Block Started by Symbol(BSS) 
    23                                  ;aqui van las variables declaradas pero sin inicializar
    24 00000000 <res 00000008>          c resq 1
    25 00000008 <res 00000008>          ab resq 1
    26                                  segment .text 
    27                                  
    28                                  global main 					
    29                                  main:	
    30                                  ;etiqueta que indica el comienzo del programa principal
    31                                  ;aqui van las instrucciones
    32 00000000 488B0C25[00000000]      mov rcx,[a] ;moviendo a parametro 1
    33 00000008 488B1425[08000000]      mov rdx,[b] ;moviendo a paramentro 2
    34 00000010 E8A6000000              CALL suma   ; llamar a la funcion suma
    35 00000015 48890425[00000000]      mov [c],rax ; c= suma(a,b)
    36                                  ;solo una cadena
    37 0000001D 4883EC20                sub rsp,0x20
    38 00000021 48B9-                   	mov rcx,s
    38 00000023 [1000000000000000] 
    39 0000002B E8(00000000)            	call printf
    40 00000030 4883C420                add rsp,0x20
    41                                  ;cadena con una variable
    42 00000034 4883EC20                sub rsp,0x20
    43 00000038 488B1425[00000000]      	mov rdx,[a]
    44 00000040 48B9-                   	mov rcx,sc
    44 00000042 [1600000000000000] 
    45 0000004A E8(00000000)            	call printf
    46 0000004F 4883C420                add rsp,0x20
    47                                  ;cadena con dos variables
    48 00000053 4883EC20                sub rsp,0x20
    49 00000057 4C8B0425[08000000]      	mov r8,[b]
    50 0000005F 488B1425[00000000]      	mov rdx,[a]
    51 00000067 48B9-                   	mov rcx,sd
    51 00000069 [2100000000000000] 
    52 00000071 E8(00000000)            	call printf
    53 00000076 4883C420                add rsp,0x20
    54                                  
    55                                  
    56 0000007A 4883EC20                sub rsp,0x20
    57 0000007E 48B9-                   	mov rcx,fmtI ; formato a leer o escanear
    57 00000080 [3300000000000000] 
    58 00000088 48BA-                   	mov rdx,ab ; donde guardare el dato
    58 0000008A [0800000000000000] 
    59 00000092 E8(00000000)            	call scanf
    60 00000097 4883C420                add rsp,0x20
    61                                  
    62 0000009B 4883EC20                sub rsp,0x20
    63 0000009F 48B9-                   	mov rcx,fmtI ; Cadena a fusionar
    63 000000A1 [3300000000000000] 
    64 000000A9 488B1425[08000000]      	mov rdx,[ab] ;variable a mostrar
    65 000000B1 E8(00000000)            	call printf
    66 000000B6 4883C420                add rsp,0x20
    67                                  
    68                                  	
    69 000000BA C3                      ret
    70                                  ;---------------------------------------
    71                                  ;..........subrutinas....................	
    72                                  suma:
    73 000000BB 4801D1                  	add rcx,rdx ;a+b
    74 000000BE 4889C8                  	mov rax,rcx
    75 000000C1 C3                      ret
    76                                  
    77                                  
    78                                  
